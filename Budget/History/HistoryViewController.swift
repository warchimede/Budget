//
//  HistoryViewController.swift
//  Budget
//
//  Created by William Archim√®de on 13/08/2017.
//  Copyright (c) 2017 William Archimede. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HistoryDisplayLogic: class {
    func displayList(viewModel: History.List.ViewModel)
}

class HistoryViewController: UIViewController {
    var interactor: HistoryBusinessLogic?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = HistoryInteractor()
        let presenter = HistoryPresenter()
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        getList()
        setupTableView()
    }

    @IBOutlet weak var historyButton: UIButton!

    @IBAction func onHistoryButtonTapped(_ sender: Any) {
        navigationController?.popViewController(animated: true)
    }

    @IBOutlet weak var operationsTableView: UITableView!

    let operationCellIdentifier = "OperationCell"
    var operationsTableViewDataSource: GenericTableViewDataSource<OperationCell>?

    fileprivate func setupTableView() {
        let bundle = Bundle(for: OperationCell.self)
        let nib = UINib(nibName: operationCellIdentifier, bundle: bundle)
        operationsTableView.register(nib, forCellReuseIdentifier: operationCellIdentifier)
        operationsTableView.estimatedRowHeight = 80.0
    }

    fileprivate func display(operations: [Operation]) {
        operationsTableViewDataSource = GenericTableViewDataSource<OperationCell>(with: operations, cellIdentifier: operationCellIdentifier)
        operationsTableView.dataSource = operationsTableViewDataSource
        operationsTableView.reloadData()
    }

    // MARK: Operations and amount

    func getList() {
        let request = History.List.Request()
        interactor?.getList(request: request)
    }
}

extension HistoryViewController: HistoryDisplayLogic {
    func displayList(viewModel: History.List.ViewModel) {
        historyButton.setTitle(viewModel.amount, for: .normal)
        display(operations: viewModel.operations)
    }
}
